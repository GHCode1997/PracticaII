package MindMap.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCentralTopic = createDescriptorForCentralTopic();
  /*package*/ final ConceptDescriptor myConceptMainTopic = createDescriptorForMainTopic();
  /*package*/ final ConceptDescriptor myConceptMarker = createDescriptorForMarker();
  /*package*/ final ConceptDescriptor myConceptMindMap = createDescriptorForMindMap();
  /*package*/ final ConceptDescriptor myConceptSubTopic = createDescriptorForSubTopic();
  /*package*/ final ConceptDescriptor myConceptTopic = createDescriptorForTopic();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCentralTopic, myConceptMainTopic, myConceptMarker, myConceptMindMap, myConceptSubTopic, myConceptTopic);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.CentralTopic:
        return myConceptCentralTopic;
      case LanguageConceptSwitch.MainTopic:
        return myConceptMainTopic;
      case LanguageConceptSwitch.Marker:
        return myConceptMarker;
      case LanguageConceptSwitch.MindMap:
        return myConceptMindMap;
      case LanguageConceptSwitch.SubTopic:
        return myConceptSubTopic;
      case LanguageConceptSwitch.Topic:
        return myConceptTopic;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCentralTopic() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MindMap", "CentralTopic", 0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e17089cL);
    b.class_(false, false, false);
    b.super_("MindMap.structure.Topic", 0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e170877L);
    b.origin("r:db5270d5-d5ee-4f6e-8a06-3570731250e1(MindMap.structure)/5033402760483506332");
    b.version(2);
    b.aggregate("mainTopics", 0x45da3d247e1708a2L).target(0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e17089fL).optional(true).ordered(true).multiple(true).origin("5033402760483506338").done();
    b.alias("centralTopic");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMainTopic() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MindMap", "MainTopic", 0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e17089fL);
    b.class_(false, false, false);
    b.super_("MindMap.structure.Topic", 0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e170877L);
    b.origin("r:db5270d5-d5ee-4f6e-8a06-3570731250e1(MindMap.structure)/5033402760483506335");
    b.version(2);
    b.aggregate("subTopics", 0x45da3d247e1708a5L).target(0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e1708a4L).optional(true).ordered(true).multiple(true).origin("5033402760483506341").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMarker() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MindMap", "Marker", 0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e170894L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:db5270d5-d5ee-4f6e-8a06-3570731250e1(MindMap.structure)/5033402760483506324");
    b.version(2);
    b.property("symbol", 0x45da3d247e1a95b5L).type(PrimitiveTypeId.STRING).origin("5033402760483739061").done();
    b.alias("maker");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMindMap() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MindMap", "MindMap", 0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e170874L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:db5270d5-d5ee-4f6e-8a06-3570731250e1(MindMap.structure)/5033402760483506292");
    b.version(2);
    b.property("title", 0x45da3d247e1a95b3L).type(PrimitiveTypeId.STRING).origin("5033402760483739059").done();
    b.aggregate("markers", 0x45da3d247e17d5a3L).target(0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e170894L).optional(true).ordered(true).multiple(true).origin("5033402760483558819").done();
    b.aggregate("centralTopic", 0x45da3d247e1a95baL).target(0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e17089cL).optional(false).ordered(true).multiple(false).origin("5033402760483739066").done();
    b.alias("mindmap");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubTopic() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MindMap", "SubTopic", 0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e1708a4L);
    b.class_(false, false, false);
    b.super_("MindMap.structure.Topic", 0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e170877L);
    b.origin("r:db5270d5-d5ee-4f6e-8a06-3570731250e1(MindMap.structure)/5033402760483506340");
    b.version(2);
    b.aggregate("subSubTopics", 0x45da3d247e1a95aeL).target(0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e1708a4L).optional(true).ordered(true).multiple(true).origin("5033402760483739054").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTopic() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MindMap", "Topic", 0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e170877L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:db5270d5-d5ee-4f6e-8a06-3570731250e1(MindMap.structure)/5033402760483506295");
    b.version(2);
    b.associate("marker", 0x45da3d247e170897L).target(0x414cc6567c6848acL, 0x8c1095d6f5574ceaL, 0x45da3d247e170894L).optional(true).origin("5033402760483506327").done();
    b.alias("topic");
    return b.create();
  }
}
